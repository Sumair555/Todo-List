{"ast":null,"code":"var _jsxFileName = \"/Users/sksumair/Desktop/mernstack/React/firstapp/src/components/Content.js\",\n  _s = $RefreshSig$();\n// src/components/Content.js\nimport React, { useState } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\"; // Delete button\nimport EditButton from \"./EditButton\"; // Edit button\nimport Input from \"./Input\"; // Add new todo input\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    title: \"Learn React\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"Learn AI\",\n    completed: true\n  }, {\n    id: 3,\n    title: \"Learn Angular\",\n    completed: false\n  }, {\n    id: 4,\n    title: \"Learn Node\",\n    completed: true\n  }]);\n  const [editId, setEditId] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const handleToggleComplete = id => {\n    setTodoList(todoList.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const handleDelete = id => {\n    setTodoList(todoList.filter(todo => todo.id !== id));\n  };\n  const handleSave = id => {\n    setTodoList(todoList.map(todo => todo.id === id ? {\n      ...todo,\n      title: editText\n    } : todo));\n    setEditId(null);\n    setEditText(\"\");\n  };\n  const handleAddTodo = () => {\n    if (newTitle.trim() === \"\") return;\n    const newTodo = {\n      id: todoList.length ? todoList[todoList.length - 1].id + 1 : 1,\n      title: newTitle,\n      completed: false\n    };\n    setTodoList([...todoList, newTodo]);\n    setNewTitle(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        padding: 0\n      },\n      children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\",\n          listStyle: \"none\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: todo.completed,\n          onChange: () => handleToggleComplete(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), editId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editText,\n          onChange: e => setEditText(e.target.value),\n          onBlur: () => handleSave(todo.id),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n          onClick: () => {\n            setEditId(todo.id);\n            setEditText(todo.title);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"60%\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value),\n        onAdd: handleAddTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"eXtxRBFFeKm1SkE8BuHEEbOXniE=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","Checkbox","Button","EditButton","Input","jsxDEV","_jsxDEV","Content","_s","todoList","setTodoList","id","title","completed","editId","setEditId","editText","setEditText","newTitle","setNewTitle","handleToggleComplete","map","todo","handleDelete","filter","handleSave","handleAddTodo","trim","newTodo","length","style","display","flexDirection","alignItems","children","padding","className","gap","listStyle","marginBottom","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","value","e","target","onBlur","autoFocus","onClick","width","marginTop","onAdd","_c","$RefreshReg$"],"sources":["/Users/sksumair/Desktop/mernstack/React/firstapp/src/components/Content.js"],"sourcesContent":["// src/components/Content.js\nimport React, { useState } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\"; // Delete button\nimport EditButton from \"./EditButton\"; // Edit button\nimport Input from \"./Input\"; // Add new todo input\n\nconst Content = () => {\n  const [todoList, setTodoList] = useState([\n    { id: 1, title: \"Learn React\", completed: false },\n    { id: 2, title: \"Learn AI\", completed: true },\n    { id: 3, title: \"Learn Angular\", completed: false },\n    { id: 4, title: \"Learn Node\", completed: true },\n  ]);\n\n  const [editId, setEditId] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n\n  const handleToggleComplete = (id) => {\n    setTodoList(\n      todoList.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const handleDelete = (id) => {\n    setTodoList(todoList.filter((todo) => todo.id !== id));\n  };\n\n  const handleSave = (id) => {\n    setTodoList(\n      todoList.map((todo) =>\n        todo.id === id ? { ...todo, title: editText } : todo\n      )\n    );\n    setEditId(null);\n    setEditText(\"\");\n  };\n\n  const handleAddTodo = () => {\n    if (newTitle.trim() === \"\") return;\n    const newTodo = {\n      id: todoList.length ? todoList[todoList.length - 1].id + 1 : 1,\n      title: newTitle,\n      completed: false,\n    };\n    setTodoList([...todoList, newTodo]);\n    setNewTitle(\"\");\n  };\n\n  return (\n    <main style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <ul style={{ padding: 0 }}>\n        {todoList.map((todo) => (\n          <li\n            className=\"item\"\n            key={todo.id}\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"10px\",\n              listStyle: \"none\",\n              marginBottom: \"10px\",\n            }}\n          >\n            <Checkbox\n              checked={todo.completed}\n              onChange={() => handleToggleComplete(todo.id)}\n            />\n\n            {editId === todo.id ? (\n              <input\n                type=\"text\"\n                value={editText}\n                onChange={(e) => setEditText(e.target.value)}\n                onBlur={() => handleSave(todo.id)}\n                autoFocus\n              />\n            ) : (\n              <label>{todo.title}</label>\n            )}\n\n            <EditButton\n              onClick={() => {\n                setEditId(todo.id);\n                setEditText(todo.title);\n              }}\n            />\n            <Button onClick={() => handleDelete(todo.id)} />\n          </li>\n        ))}\n      </ul>\n\n      <div style={{ width: \"60%\", marginTop: \"20px\" }}>\n        <Input\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          onAdd={handleAddTodo}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default Content;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}